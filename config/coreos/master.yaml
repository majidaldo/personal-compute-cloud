---

#cloud-config


write_files:

  - path: /home/core/sys.env
    permissions: 666
    content: |
      REGISTRY_HOST==
      

  - path: /etc/profile.d/sys_env.sh
    permissions: 755
    content: |
      #!/bin/sh
      while read env; do
          eval export $env
      done <  /home/core/sys.env
      #docker env
      eval $(weave proxy-env)
      
  
  - path: /etc/systemd/system/docker.service.d/50-insecure-registry.conf
    content: |
      [Service]
      EnvironmentFile=/home/core/sys.env
      Environment='DOCKER_OPTS=\
      --insecure-registry=10.128.0.0/16 \
      --insecure-registry=${REGISTRY_HOST} \
      --registry-mirror=http://${REGISTRY_HOST}'
  

  - path: /home/core/waitforfile.sh
    permissions: 755
    content: |
      #!/bin/sh
      #bc systemd sucks!
      cd ~
      #gets the file name as an argument
      while [ ! -f $1 ]
      do
         sleep .1
      done
        
coreos:
  fleet:
    public-ip: $public_ipv4
    metadata: "loc=local , role=init"
  units:

    - name: docker.service
      command: start
    - name: etcd2.service
      command: start
    - name: fleet.service
      command: start
    - name: docker-tcp.socket
      command: start
      enable: true
      content: |
        [Unit]
        Description=Docker Socket for the API
        After=weavedns.service
        Requires=weavedns.service
        
        [Socket]
        ListenStream=2375
        Service=docker.service
        BindIPv6Only=both
        
        [Install]
        WantedBy=sockets.target

    - name: 10-weave.network
      runtime: false
      content: |
        [Match]
        Type=bridge
        Name=weave*

        [Network]
    - name: install-weave.service
      command: stop
      enable: true
      content: |
        [Unit]
        Description=Install Weave
        Documentation=http://zettio.github.io/weave/
        Requires=network-online.target docker.service 
        After=   network-online.target docker.service

        
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStartPre=/bin/mkdir -p /opt/bin/
        ExecStartPre=/usr/bin/curl \
        --silent \
        --location \
        https://github.com/weaveworks/weave/releases/download/latest_release/weave \
        --output /opt/bin/weave
        ExecStartPre=/usr/bin/chmod +x /opt/bin/weave
        ExecStartPre=/usr/bin/docker pull zettio/weave:latest
        ExecStartPre=/usr/bin/docker pull zettio/weavetools:latest
        ExecStartPre=/usr/bin/docker pull zettio/weavedns:latest
        ExecStartPre=/usr/bin/docker pull weaveworks/weaveexec:latest
        ExecStart=/bin/echo Weave Installed
    - name: weave.service
      command: start
      enable: true
      content: |
        [Unit]
        Description=Weave Network
        Documentation=http://zettio.github.io/weave/
        After=install-weave.service
        Requires=install-weave.service
        
        [Service]
        ExecStartPre=/opt/bin/weave launch -iprange 10.128.0.0/24 -ipsubnet 10.128.0.0/25
        ExecStart=/usr/bin/docker logs -f weave
        SuccessExitStatus=2
        ExecStop=/opt/bin/weave stop
    - name: weavedns.service
      command: start
      enable: true
      content: |
        [Unit]
        Description=Weave dns Network
        Documentation=http://zettio.github.io/weave/
        Requires=weave.service 
        After=   weave.service 
        
        [Service]
        EnvironmentFile=/home/core/sys.env
        ExecStartPre=/opt/bin/weave launch-dns 
        ExecStart=/usr/bin/docker logs -f weavedns
        SuccessExitStatus=2
        ExecStop=/opt/bin/weave stop-dns
    - name: weaveproxy.service
      command: start
      enable: true
      content: |
        [Unit]
        Description=Weave proxy
        Documentation=http://zettio.github.io/weave/
        Requires=weavedns.service 
        After=   weavedns.service 
        
        [Service]
        EnvironmentFile=/home/core/sys.env
        ExecStartPre=/opt/bin/weave launch-proxy
        ExecStartPre=/etc/profile.d/sys_env.sh
        ExecStart=/usr/bin/docker logs -f weaveproxy
        SuccessExitStatus=2
        ExecStop=/opt/bin/weave stop-proxy
    - name: stuffregistry.service
      command: start
      enable: true
      content: |
        [Unit]
        After=registry.service
        Requires=registry.service
        Description=stuff registry with useful images
            
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        EnvironmentFile=/home/core/sys.env
        ExecStartPre=/tsad-proj/tsad-sys/docker/build.sh
        ExecStart=/bin/echo 'bootstrapped registry'
        
       
        
    - name: projectfiles.service
      command: start
      enable: true
      content: |
        [Unit]
        Description=gets project files
        Requires=network-online.target 
        After=   network-online.target 

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        EnvironmentFile=/home/core/sys.env
        ExecStartPre=-/usr/bin/mkdir /tsad-proj
        ExecStart=/usr/bin/mount -v -o \
        'rw,relatime,vers=3,rsize=32768,wsize=4096,namlen=255,hard,nolock,proto=udp,timeo=11,retrans=3,sec=sys,mountvers=3,mountport=1058,mountproto=udp,local_lock=all' \
        ${NFS_SERVER}:/tsad-proj /tsad-proj
        ExecStop=/usr/bin/umount /tsad-proj


    - name: loadregimg.service
      command: start
      enable: true
      content: |
        [Unit]
        Description=loads docker registry image
        After=projectfiles.service docker.service
        Requires=projectfiles.service docker.service

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStartPre=/home/core/waitforfile.sh \
        /tsad-proj/tsad-bigfiles/images/docker/bootstrap/registry.tar
        ExecStart=/usr/bin/docker load --input \
        /tsad-proj/tsad-bigfiles/images/docker/bootstrap/registry.tar
        
       
    - name: registry.service
      command: start
      enable: true
      content: |
        [Unit]
        Description=pvt docker registry
        After=   docker.service projectfiles.service loadregimg.service weaveproxy.service
        Requires=docker.service projectfiles.service loadregimg.service weaveproxy.service

        [Service]
        TimeoutStartSec=0
        KillMode=none
        ExecStartPre=/etc/profile.d/sys_env.sh
        ExecStartPre=-/usr/bin/docker kill registry
        ExecStartPre=-/usr/bin/docker rm -f registry
        ExecStartPre=/opt/bin/weave run ${REGISTRY_WNET} \
        --name registry \
        -d \
        -v /tsad-proj/tsad-bigfiles/images/docker/registry:/registry \
        -e STORAGE_PATH=/registry \
        -e SETTINGS_FLAVOR=dev \
        -e MIRROR_SOURCE=https://registry-1.docker.io \
        -e MIRROR_SOURCE_INDEX=https://index.docker.io \
        -p 80:5000 \
        registry
        ExecStart=/usr/bin/docker logs -f registry
        ExecStop=/usr/bin/docker stop registry


        
    - name: fileshare.service
      command: start
      enable: true
      content: |
        [Unit]
        Description= nfs share for my project files
        Requires=registry.service
        After=   registry.service
        
        [Service]
        EnvironmentFile=/home/core/sys.env
        ExecStartPre=/etc/profile.d/sys_env.sh
        ExecStartPre=-/usr/bin/docker rm nfs-server
        ExecStartPre=/opt/bin/weave run ${FILESHARE_WNET} \
        --name nfs-server \
        --privileged \
        -d \
        -v /tsad-proj:/tsad-proj \
        nfs-server /tsad-proj
        ExecStart=/usr/bin/docker logs -f nfs-server
        ExecStop= /usr/bin/docker stop    nfs-server
        