# -*- mode: ruby -*-
# vi: set ft=ruby :
system("sh ./setup.sh")



ENV["VAGRANT_DETECTED_OS"] = ENV["VAGRANT_DETECTED_OS"].to_s + " cygwin"

Vagrant.configure(2) do |config|

  #idk if this works
  if Vagrant.has_plugin?("vagrant-cachier")
    config.cache.scope = :machine
    config.cache.synced_folder_opts = {
      type: "rsync",
      mount_options: ['rw', 'vers=3', 'tcp', 'nolock']
    }
  end
  

  # common stuff in the boxes

  
  config.vm.provider "virtualbox" do |v|
    v.memory = 2048
  end

  config.vm.synced_folder ".", 'vagrant', disabled: true
  config.vm.synced_folder ENV["SRC_DIR_HST"], ENV["SRC_DIR_GST"] \
                          , type: ENV["SRC_DIR_TYPE"] \
                          , rsync__exclude: [ENV["IMAGES_DIR"],".git/"]
  #config.vm.synced_folder "../../data", "/data" #maybe


  #machine that runs the registry comes on first
  config.vm.define "dockerreg" do |dkrrg|
    dkrrg.vm.box = ENV["REGISTRY_BOX"]
    dkrrg.vm.network "private_network", ip: ENV["REGISTRY_ADD"]
    dkrrg.vm.synced_folder ".", 'vagrant', disabled: true
    dkrrg.vm.synced_folder ENV["REGISTRY_DIR"], "/registry"
    dkrrg.vm.provision "loadimgs", type:  "shell" do |s|
      s.inline= 'docker load --input /registry/ubuntu.tar  
                 docker load --input /registry/registry.tar  '
    end
    dkrrg.vm.provision "docker" do |d|
      d.run "registry",
            daemonize: true,
            args: "-e SETTINGS_FLAVOR=dev \
                   -e STORAGE_PATH=/registry \
                   -p 5000:5000"
    end
  end

  #machine that runs my dockers
  config.vm.define "dockers" do |dkrbx|
    dkrbx.vm.box = ENV["DOCKER_BOX"]
    dkrbx.vm.network "private_network", ip: ENV["DOCKER_BOX_ADD"]
  end



  #todo: provision system setup
 
  
end
