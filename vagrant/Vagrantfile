# -*- mode: ruby -*-
# vi: set ft=ruby :
system("sh ./setup.sh")

$regscript=<<SCRIPT

docker load --input /registry/registry.tar
docker run \
-e SETTINGS_FLAVOR=dev \
-e STORAGE_PATH=/registry \
-p 5000:5000 \
registry

SCRIPT



ENV["VAGRANT_DETECTED_OS"] = ENV["VAGRANT_DETECTED_OS"].to_s + " cygwin"

Vagrant.configure(2) do |config|

  #idk if this works
  if Vagrant.has_plugin?("vagrant-cachier")
    config.cache.scope = :machine
    config.cache.synced_folder_opts = {
      type: "rsync",
      mount_options: ['rw', 'vers=3', 'tcp', 'nolock']
    }
  end
  

  # common stuff in the boxes
  
  config.vm.box = ENV["DOCKER_BOX"]

  config.vm.synced_folder ".", 'vagrant', disabled: true
  config.vm.synced_folder ENV["SRC_DIR_HST"], ENV["SRC_DIR_GST"] \
                          , type: ENV["SRC_DIR_TYPE"] \
                          , rsync__exclude: [ENV["IMAGES_DIR"],".git/"]
  #config.vm.synced_folder "../../data", "/data" #maybe
  

  #machine that runs my dockers
  config.vm.define "dockers" do |dkrbx|
    dkrbx.vm.network "private_network", ip: ENV["DOCKER_BOX_ADD"]
  end

  #machine that runs the registry
  config.vm.define "dockerreg" do |dkrrg|
    dkrrg.vm.network "private_network", ip: ENV["REGISTRY_ADD"]
    dkrrg.vm.synced_folder ".", 'vagrant', disabled: true
    dkrrg.vm.synced_folder ENV["REGISTRY_DIR"], "/registry"
    dkrrg.vm.provision "shell" , inline: $regscript
  end

  #todo: provision system setup
 
  
end
